A
Selects all elements of type A. Type refers to the type of tag, so div, p and ul are all different element types.

A
Selects all elements of type A. Type refers to the type of tag, so div, p and ul are all different element types.

#id
Selects the element with a specific id. You can also combine the ID selector with the type selector.

A  B
Selects all B inside of A. B is called a descendant because it is inside of another element.

#id  A
You can combine any selector with the descendent selector.

.classname
The class selector selects all elements with that class attribute. Elements can only have one ID, but many classes.

A.className
You can combine the class selector with other selectors, like the type selector.

A, B
Thanks to Shatner technology, this selects all A and B elements. You can combine any selectors this way, and you can specify more than two.

*
You can select all elements with the universal selector!

A  *
This selects all elements inside of A.

A + B
This selects all B elements that directly follow A. Elements that follow one another are called siblings. They're on the same level, or depth.

In the HTML markup for this level, elements that have the same indentation are siblings.

A ~ B
You can select all siblings of an element that follow it. This is like the Adjacent Selector (A + B) except it gets all of the following elements instead of one.

A > B 
You can select elements that are direct children of other elements. A child element is any element that is nested directly in another element.

Elements that are nested deeper than that are called descendant elements.

:first-child
You can select the first child element. A child element is any element that is directly nested in another element. You can combine this pseudo-selector with other selectors.

:only-child
You can select any element that is the only element inside of another one.

:last-child
You can use this selector to select an element that is the last child element inside of another element.

Pro Tip â†’ In cases where there is only one element, that element counts as the first-child, only-child and last-child!

:nth-child(A)
Selects the nth (Ex: 1st, 3rd, 12th etc.) child element in another element.

:nth-last-child(A)
Selects the children from the bottom of the parent. This is like nth-child, but counting from the back!

:first-of-type
Selects the first element of that type within another element.

:nth-of-type(A)
Selects a specific element based on its type and order in another element - or even or odd instances of that element.

The nth-of-type formula selects every nth element, starting the count at a specific instance of that element.

:only-of-type
Selects the only element of its type within another element.

:last-of-type
Selects each last element of that type within another element. Remember type refers the kind of tag, so p and span are different types.

I wonder if this is how the last dinosaur was selected before it went extinct.

:empty
Selects elements that don't have any other elements inside of them.

:not(X)
You can use this to select all elements that do not match selector "X".

[attribute]
Attributes appear inside the opening tag of an element, like this: span attribute="value". An attribute does not always have a value, it can be blank!

A[attribute]
Combine the attribute selector with another selector (like the tag name selector) by adding it to the end.

[attribute="value"]
Attribute selectors are case sensitive, each character must match exactly.

[attribute^="value"]

[attribute$="value"]

[attribute*="value"]
A useful selector if you can identify a common pattern in things like class, href or src attributes.